# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/jav


trigger:
  branches:
    include: 
    - main
    
pool:
  vmImage: 'ubuntu-latest'

steps:
    #compile code, run tests, and package the project into an executable jar file
  - task: Maven@3
    inputs:
      mavenPomFile: '$(System.DefaultWorkingDirectory)/Application/pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: 'default'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'

    # Build Docker image
  - task: Maven@3
    displayName: "Build Docker image"
    inputs:
      mavenPomFile: '$(System.DefaultWorkingDirectory)/Application/pom.xml'
      goals: 'spring-boot:build-image'
      publishJUnitResults: false
      jdkVersionOption: 'default'
      mavenOptions: '-Xmx3072m -Dspring-boot.build-image.imageName=bhacr120.azurecr.io/my/container'
  
    # Push container image
  - task: Docker@2
    displayName: "Push Docker image"
    inputs:
      containerRegistry: 'BHContainerRegistry'
      repository: 'react-and-spring-data-rest'
      command: 'push'
      tags: 'latest'

    # Copy kubernetes deployment file
  - task: CopyFiles@2
    displayName: 'Copy aks dpeloyment template for release use'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/Configuration/aks_deploy_file'
      Contents: '**'
      TargetFolder: '$(build.artifactstagingdirectory)'

    # Publish the app as an artifact
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'app'
      publishLocation: 'Container'

